<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM32100E-EVAL\STM32100E-EVAL.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM32100E-EVAL\STM32100E-EVAL.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Wed May 04 15:54:28 2016
<BR><P>
<H3>Maximum Stack Usage =       1428 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Main_Menu &rArr; SerialUpload &rArr; Ymodem_Transmit &rArr; Ymodem_PrepareIntialPacket &rArr; Int2Str
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[30]">CEC_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel5_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2e]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[1d]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[34]">FSMC_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[26]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[25]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[28]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[27]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2f]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[36]">SPI3_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[41]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd_vl.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[31]">TIM12_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[32]">TIM13_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[33]">TIM14_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[1e]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[21]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[20]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[1f]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[22]">TIM2_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[23]">TIM3_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[24]">TIM4_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[35]">TIM5_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[39]">TIM6_DAC_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[3a]">TIM7_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[2d]">USART3_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd_vl.o(.text) referenced from startup_stm32f10x_hd_vl.o(RESET)
 <LI><a href="#[42]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd_vl.o(.text)
 <LI><a href="#[40]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[43]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[45]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[77]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[78]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[79]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[7b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[7c]"></a>__get_PSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[7d]"></a>__set_PSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[7e]"></a>__get_MSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[59]"></a>__set_MSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core_cm3.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[7f]"></a>__REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[80]"></a>__REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[83]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CalChecksum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ymodem.o(i.CalChecksum))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
</UL>

<P><STRONG><a name="[46]"></a>Cal_CRC16</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, ymodem.o(i.Cal_CRC16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Cal_CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>FLASH_DisableWriteProtectionPages</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, common.o(i.FLASH_DisableWriteProtectionPages))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FLASH_DisableWriteProtectionPages &rArr; FLASH_EnableWriteProtection &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetWriteProtectionOptionByte
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetUserOptionByte
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[4c]"></a>FLASH_EnableWriteProtection</STRONG> (Thumb, 156 bytes, Stack size 28 bytes, stm32f10x_flash.o(i.FLASH_EnableWriteProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_EnableWriteProtection &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>

<P><STRONG><a name="[4b]"></a>FLASH_EraseOptionBytes</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_EraseOptionBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_EraseOptionBytes &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetReadOutProtectionStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>

<P><STRONG><a name="[51]"></a>FLASH_ErasePage</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[53]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[50]"></a>FLASH_GetReadOutProtectionStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetReadOutProtectionStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
</UL>

<P><STRONG><a name="[4a]"></a>FLASH_GetUserOptionByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetUserOptionByte))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>

<P><STRONG><a name="[49]"></a>FLASH_GetWriteProtectionOptionByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetWriteProtectionOptionByte))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>

<P><STRONG><a name="[70]"></a>FLASH_PagesMask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, common.o(i.FLASH_PagesMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_PagesMask
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[52]"></a>FLASH_ProgramWord</STRONG> (Thumb, 76 bytes, Stack size 28 bytes, stm32f10x_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[75]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>FLASH_UserOptionByteConfig</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, stm32f10x_flash.o(i.FLASH_UserOptionByteConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_UserOptionByteConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>

<P><STRONG><a name="[4f]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
</UL>

<P><STRONG><a name="[62]"></a>GPIO_Init</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[60]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[54]"></a>GetKey</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, common.o(i.GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetKey &rArr; SerialKeyPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialKeyPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUpload
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>Int2Str</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, common.o(i.Int2Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Int2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_PrepareIntialPacket
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
</UL>

<P><STRONG><a name="[56]"></a>Main_Menu</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, common.o(i.Main_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = Main_Menu &rArr; SerialUpload &rArr; Ymodem_Transmit &rArr; Ymodem_PrepareIntialPacket &rArr; Int2Str
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_MSP
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUpload
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetWriteProtectionOptionByte
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>MiniBalance_Motor_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, motor.o(i.MiniBalance_Motor_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MiniBalance_PWM_Init
</UL>

<P><STRONG><a name="[5a]"></a>MiniBalance_PWM_Init</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, motor.o(i.MiniBalance_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MiniBalance_PWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MiniBalance_Motor_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[5f]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[6c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[5e]"></a>STM_EVAL_COMInit</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, stm32_eval.o(i.STM_EVAL_COMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = STM_EVAL_COMInit &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SerialDownload</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, download.o(i.SerialDownload))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = SerialDownload &rArr; Ymodem_Receive &rArr; Receive_Packet &rArr; Receive_Byte &rArr; SerialKeyPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[55]"></a>SerialKeyPressed</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, common.o(i.SerialKeyPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SerialKeyPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Byte
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnterIAP
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>

<P><STRONG><a name="[68]"></a>SerialPutChar</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, common.o(i.SerialPutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SerialPutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_SendPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
</UL>

<P><STRONG><a name="[58]"></a>SerialUpload</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, upload.o(i.SerialUpload))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = SerialUpload &rArr; Ymodem_Transmit &rArr; Ymodem_PrepareIntialPacket &rArr; Int2Str
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[4e]"></a>Serial_PutString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, common.o(i.Serial_PutString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Serial_PutString &rArr; SerialPutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnterIAP
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUpload
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_DisableWriteProtectionPages
</UL>

<P><STRONG><a name="[6f]"></a>Str2Int</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, common.o(i.Str2Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Str2Int
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[67]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialKeyPressed
</UL>

<P><STRONG><a name="[63]"></a>USART_Init</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[69]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
</UL>

<P><STRONG><a name="[47]"></a>UpdateCRC16</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ymodem.o(i.UpdateCRC16))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_CRC16
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd_vl.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>Ymodem_PrepareIntialPacket</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ymodem.o(i.Ymodem_PrepareIntialPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Ymodem_PrepareIntialPacket &rArr; Int2Str
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
</UL>

<P><STRONG><a name="[73]"></a>Ymodem_PreparePacket</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ymodem.o(i.Ymodem_PreparePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ymodem_PreparePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
</UL>

<P><STRONG><a name="[65]"></a>Ymodem_Receive</STRONG> (Thumb, 438 bytes, Stack size 1096 bytes, ymodem.o(i.Ymodem_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = Ymodem_Receive &rArr; Receive_Packet &rArr; Receive_Byte &rArr; SerialKeyPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Packet
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2Int
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PagesMask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialDownload
</UL>

<P><STRONG><a name="[71]"></a>Ymodem_SendPacket</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ymodem.o(i.Ymodem_SendPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Ymodem_SendPacket &rArr; SerialPutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
</UL>

<P><STRONG><a name="[6a]"></a>Ymodem_Transmit</STRONG> (Thumb, 518 bytes, Stack size 1344 bytes, ymodem.o(i.Ymodem_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = Ymodem_Transmit &rArr; Ymodem_PrepareIntialPacket &rArr; Int2Str
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_SendPacket
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_PreparePacket
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_PrepareIntialPacket
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_CRC16
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalChecksum
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Byte
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialUpload
</UL>

<P><STRONG><a name="[84]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[85]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[86]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[74]"></a>isEnterIAP</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, main.o(i.isEnterIAP))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = isEnterIAP &rArr; Serial_PutString &rArr; SerialPutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialKeyPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>main</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428<LI>Call Chain = main &rArr; Main_Menu &rArr; SerialUpload &rArr; Ymodem_Transmit &rArr; Ymodem_PrepareIntialPacket &rArr; Int2Str
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MiniBalance_PWM_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEnterIAP
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_MSP
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_PutString
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5c]"></a>Receive_Byte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ymodem.o(i.Receive_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Receive_Byte &rArr; SerialKeyPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialKeyPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Transmit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Packet
</UL>

<P><STRONG><a name="[5d]"></a>Receive_Packet</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, ymodem.o(i.Receive_Packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Receive_Packet &rArr; Receive_Byte &rArr; SerialKeyPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ymodem_Receive
</UL>

<P><STRONG><a name="[6b]"></a>SetSysClockTo72</STRONG> (Thumb, 160 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
