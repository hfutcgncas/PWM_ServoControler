; generated by ARM C/C++ Compiler, 4.1 [Build 567]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\delay.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\delay.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\source\wlib\系统时钟配置 -I.\source\wlib\delay -I..\uvsion -I"D:\Program Files\keil4.14\ARM\INC" -I"D:\Program Files\keil4.14\ARM\INC\ST\STM32F10x" -D__MICROLIB --omf_browse=.\obj\delay.crf source\wlib\delay\delay.c]
                          THUMB

                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;24     //SYSCLK:系统时钟
;;;25     void delay_init(u8 SYSCLK)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;26     {
;;;27     	SysTick->CTRL&=0xfffffffb;//bit2清空,选择外部时钟  HCLK/8
000004  6909              LDR      r1,[r1,#0x10]
000006  f0210104          BIC      r1,r1,#4
00000a  f04f22e0          MOV      r2,#0xe000e000
00000e  6111              STR      r1,[r2,#0x10]
;;;28     	fac_us=SYSCLK/8;		    
000010  17c2              ASRS     r2,r0,#31
000012  eb007252          ADD      r2,r0,r2,LSR #29
000016  10d2              ASRS     r2,r2,#3
000018  4b04              LDR      r3,|L1.44|
00001a  701a              STRB     r2,[r3,#0]
;;;29     	fac_ms=(u16)fac_us*1000;
00001c  4619              MOV      r1,r3
00001e  7809              LDRB     r1,[r1,#0]  ; fac_us
000020  f44f727a          MOV      r2,#0x3e8
000024  4351              MULS     r1,r2,r1
000026  4a02              LDR      r2,|L1.48|
000028  8011              STRH     r1,[r2,#0]
;;;30     }								    
00002a  4770              BX       lr
;;;31     //延时nms
                          ENDP

                  |L1.44|
                          DCD      fac_us
                  |L1.48|
                          DCD      fac_ms

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;36     //对72M条件下,nms<=1864 
;;;37     void delay_ms(u16 nms)
000000  4601              MOV      r1,r0
;;;38     {	 		  	  
;;;39     	u32 temp;		   
;;;40     	SysTick->LOAD=(u32)nms*fac_ms;//时间加载(SysTick->LOAD为24bit)
000002  4a0d              LDR      r2,|L2.56|
000004  8812              LDRH     r2,[r2,#0]  ; fac_ms
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;41     	SysTick->VAL =0x00;           //清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;42     	SysTick->CTRL=0x01 ;          //开始倒数  
000012  2201              MOVS     r2,#1
000014  611a              STR      r2,[r3,#0x10]
;;;43     	do
000016  bf00              NOP      
                  |L2.24|
;;;44     	{
;;;45     		temp=SysTick->CTRL;
000018  f04f22e0          MOV      r2,#0xe000e000
00001c  6910              LDR      r0,[r2,#0x10]
;;;46     	}
;;;47     	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001e  f0100f01          TST      r0,#1
000022  d002              BEQ      |L2.42|
000024  f4103f80          TST      r0,#0x10000
000028  d0f6              BEQ      |L2.24|
                  |L2.42|
;;;48     	SysTick->CTRL=0x00;       //关闭计数器
00002a  2200              MOVS     r2,#0
00002c  f04f23e0          MOV      r3,#0xe000e000
000030  611a              STR      r2,[r3,#0x10]
;;;49     	SysTick->VAL =0X00;       //清空计数器	  	    
000032  619a              STR      r2,[r3,#0x18]
;;;50     }   
000034  4770              BX       lr
;;;51     //延时nus
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      fac_ms

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;52     //nus为要延时的us数.		    								   
;;;53     void delay_us(u32 nus)
000000  4601              MOV      r1,r0
;;;54     {		
;;;55     	u32 temp;	    	 
;;;56     	SysTick->LOAD=nus*fac_us; //时间加载	  		 
000002  4a0d              LDR      r2,|L3.56|
000004  7812              LDRB     r2,[r2,#0]  ; fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;57     	SysTick->VAL=0x00;        //清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;58     	SysTick->CTRL=0x01 ;      //开始倒数 	 
000012  2201              MOVS     r2,#1
000014  611a              STR      r2,[r3,#0x10]
;;;59     	do
000016  bf00              NOP      
                  |L3.24|
;;;60     	{
;;;61     		temp=SysTick->CTRL;
000018  f04f22e0          MOV      r2,#0xe000e000
00001c  6910              LDR      r0,[r2,#0x10]
;;;62     	}
;;;63     	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001e  f0100f01          TST      r0,#1
000022  d002              BEQ      |L3.42|
000024  f4103f80          TST      r0,#0x10000
000028  d0f6              BEQ      |L3.24|
                  |L3.42|
;;;64     	SysTick->CTRL=0x00;       //关闭计数器
00002a  2200              MOVS     r2,#0
00002c  f04f23e0          MOV      r3,#0xe000e000
000030  611a              STR      r2,[r3,#0x10]
;;;65     	SysTick->VAL =0X00;       //清空计数器	 
000032  619a              STR      r2,[r3,#0x18]
;;;66     }
000034  4770              BX       lr
;;;67     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
